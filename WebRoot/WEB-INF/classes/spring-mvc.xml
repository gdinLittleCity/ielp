<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器     -->
	<context:component-scan base-package="cn.edu.gdin.ilep.manager.web,cn.edu.gdin.ilep.show.web" use-default-filters="false">
		<!--  只扫描指定注解(@controller) -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 校验配置 -->
	<bean id="validation" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
			<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
			<property name="validationMessageSource" ref="message"></property>
	</bean>
	<!-- 错误信息 资源文件 -->	
		<bean id="message" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		
			<!-- 资源文件名-->
			<property name="basenames">   
	       	 <list>    
	            <value>classpath:errorMessage</value> 
	       	 </list>   
	    	</property>
	    	<!-- 资源文件编码格式 -->
			<property name="fileEncodings" value="utf-8" />
			<!-- 对资源文件内容缓存时间，单位秒 -->
			<property name="cacheSeconds" value="120" />
		</bean>
	 
	 <mvc:annotation-driven validator="validation"></mvc:annotation-driven>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	 JSON转换器 
			</list>
		</property>
	</bean>
	-->
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 静态资源解析包括 ：js、css、img、..-->
	 <mvc:resources location="/js/" mapping="/js/*"/>
	 <mvc:resources location="/images/" mapping="/images/*"/>
	 <mvc:resources location="/upload/" mapping="/upload/*"/>
	
	
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="cn.edu.gdin.ilep.util.MultipartListenerResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
       
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
        <!--resolveLazily属性启用是为了推迟文件解析，以便在action 中捕获文件大小异常-->
        <property name="resolveLazily" value="true"/>  
    </bean> 
	
	<!-- 配置拦截器 -->
	
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**"/>
			<bean class="cn.edu.gdin.ilep.filter.PowerFilter"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/manager/super/**"/>
			<bean class="cn.edu.gdin.ilep.filter.CommonUserFilter"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 异常配置 -->
	<bean id="uploadException" class="cn.edu.gdin.ilep.exception.UploadException">
	</bean>
	
	
</beans>
